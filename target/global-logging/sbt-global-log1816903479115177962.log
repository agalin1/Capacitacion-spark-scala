[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (Amazon.com Inc. Java 1.8.0_312)
[debug]       Load.loadUnit: plugins took 94.242444ms
[debug]       Load.loadUnit: defsScala took 0.442316ms
[debug] [Loading] Scanning directory /home/agalin1/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/agalin1/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 148.549208 ms
[debug]           Load.resolveProject(global-plugins) took 62.559017ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/agalin1/.sbt/1.0/plugins, plugins: List(<none>))) took 244.126977ms
[debug] [Loading] Done in /home/agalin1/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 272.442307ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.321228ms
[debug]     Load.loadUnit(file:/home/agalin1/.sbt/1.0/plugins/, ...) took 376.718185ms
[debug]   Load.apply: load took 579.887359ms
[debug]   Load.apply: resolveProjects took 7.287344ms
[debug]   Load.apply: finalTransforms took 94.852966ms
[debug]   Load.apply: config.delegates took 13.17203ms
[debug]   Load.apply: Def.make(settings)... took 438.45313ms
[debug]   Load.apply: structureIndex took 105.181471ms
[debug]   Load.apply: mkStreams took 1.5883ms
[info] loading global plugins from /home/agalin1/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5122.349789ms
[debug]           Load.loadUnit: plugins took 14.311979ms
[debug]           Load.loadUnit: defsScala took 0.004924ms
[debug] [Loading] Scanning directory /home/agalin1/IdeaProjects/Capacitacion-spark-scala/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/agalin1/IdeaProjects/Capacitacion-spark-scala/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.642709 ms
[debug]               Load.resolveProject(capacitacion-spark-scala-build) took 1.307289ms
[debug]             Load.loadTransitive: finalizeProject(Project(id capacitacion-spark-scala-build, base: /home/agalin1/IdeaProjects/Capacitacion-spark-scala/project, plugins: List(<none>))) took 4.571166ms
[debug] [Loading] Done in /home/agalin1/IdeaProjects/Capacitacion-spark-scala/project, returning: (capacitacion-spark-scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6.547489ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.013397ms
[debug]         Load.loadUnit(file:/home/agalin1/IdeaProjects/Capacitacion-spark-scala/project/, ...) took 21.591738ms
[debug]       Load.apply: load took 22.924755ms
[debug]       Load.apply: resolveProjects took 0.119804ms
[debug]       Load.apply: finalTransforms took 8.642824ms
[debug]       Load.apply: config.delegates took 0.537369ms
[debug]       Load.apply: Def.make(settings)... took 98.254678ms
[debug]       Load.apply: structureIndex took 25.381465ms
[debug]       Load.apply: mkStreams took 0.002651ms
[info] loading project definition from /home/agalin1/IdeaProjects/Capacitacion-spark-scala/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4249.287471ms
[debug]     Load.loadUnit: defsScala took 0.003305ms
[debug] [Loading] Scanning directory /home/agalin1/IdeaProjects/Capacitacion-spark-scala
[debug]       Load.loadUnit: mkEval took 8.12102ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/agalin1/IdeaProjects/Capacitacion-spark-scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.884609 ms
[info] loading settings for project capacitacion-spark-scala from build.sbt ...
[debug]         Load.resolveProject(capacitacion-spark-scala) took 2.969708ms
[debug]       Load.loadTransitive: finalizeProject(Project(id capacitacion-spark-scala, base: /home/agalin1/IdeaProjects/Capacitacion-spark-scala, plugins: List(<none>))) took 5.568818ms
[debug] [Loading] Done in /home/agalin1/IdeaProjects/Capacitacion-spark-scala, returning: (capacitacion-spark-scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 3288.726771ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.435401ms
[debug]   Load.loadUnit(file:/home/agalin1/IdeaProjects/Capacitacion-spark-scala/, ...) took 7545.197849ms
[debug] Load.apply: load took 7546.515227ms
[debug] Load.apply: resolveProjects took 0.1124ms
[debug] Load.apply: finalTransforms took 7.878981ms
[debug] Load.apply: config.delegates took 0.349746ms
[debug] Load.apply: Def.make(settings)... took 114.704226ms
[debug] Load.apply: structureIndex took 31.629838ms
[debug] Load.apply: mkStreams took 0.003697ms
[info] set current project to capacitacion-spark-scala (in build file:/home/agalin1/IdeaProjects/Capacitacion-spark-scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/agalin1/.sbt/1.0/server/c7bf57be8f645b0f0446/sock
[debug] Writing bsp connection file
[info] started sbt server
